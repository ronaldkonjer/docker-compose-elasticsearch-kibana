version: '3.7'
services:
  elasticsearch1-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: elasticsearch1-2
    environment:
      - node.name=elasticsearch1-2
      - cluster.name=docker-cluster-2
      - cluster.initial_master_nodes=elasticsearch1-2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs-2
        target: /var/log
      - type: volume
        source: esdata1-2
        target: /usr/share/elasticsearch/data
    networks:
      - elastic
      - ingress
    ports:
      - 19200:9200
      - 19300:9300
  elasticsearch2-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: elasticsearch2-2
    environment:
      - node.name=elasticsearch2-2
      - cluster.name=docker-cluster-2
      - cluster.initial_master_nodes=elasticsearch1-2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1-2"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    # privileged: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs-2
        target: /var/log
      - type: volume
        source: esdata2-2
        target: /usr/share/elasticsearch/data
    networks:
      - elastic
      - ingress
    ports:
      - 19201:9200
#  elasticsearch3-2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
#    container_name: elasticsearch3-2
#    environment:
#      - node.name=elasticsearch3-2
#      - cluster.name=docker-cluster-2
#      - cluster.initial_master_nodes=elasticsearch1-2
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
#      - "discovery.zen.ping.unicast.hosts=elasticsearch1-2"
#      - http.cors.enabled=true
#      - http.cors.allow-origin=*
#      - network.host=_eth0_
#    ulimits:
#      nproc: 65535
#      memlock:
#        soft: -1
#        hard: -1
#    cap_add:
#      - ALL
#    # privileged: true
#    deploy:
#      replicas: 1
#      update_config:
#        parallelism: 1
#        delay: 10s
#      resources:
#        limits:
#          cpus: '1'
#          memory: 256M
#        reservations:
#          cpus: '1'
#          memory: 256M
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 10s
#    volumes:
#      - type: volume
#        source: logs-2
#        target: /var/log
#      - type: volume
#        source: esdata3-2
#        target: /usr/share/elasticsearch/data
#    networks:
#      - elastic-2
#      - ingress-2
#    ports:
#      - 19202:9200
  kibana-2:
    image: docker.elastic.co/kibana/kibana:7.4.2
    container_name: kibana-2
    environment:
      SERVER_NAME: localhost
      #ELASTICSEARCH_URL: http://elasticsearch1-2:19200
      ELASTICSEARCH_HOSTS: http://elasticsearch1-2:9200
      #ELASTICSEARCH_PORT: 19200
    ports:
      - 15601:5601
    volumes:
      - type: volume
        source: logs-2
        target: /var/log
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
    networks:
      - elastic
      - ingress
#  auditbeat-2:
#    image: docker.elastic.co/beats/auditbeat:7.4.2
#    command: auditbeat -e -strict.perms=false
#    user: root
#    environment:
#      - setup.kibana.host=kibana-2:15601
#      - output.elasticsearch.hosts=["elasticsearch-2:19200"]
#    cap_add: ['AUDIT_CONTROL', 'AUDIT_READ']
#    pid: "host"
#    volumes:
#    #   - ${PWD}/configs/auditbeat.docker.yml:/usr/share/auditbeat/auditbeat.yml
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - elastic-2
#  metricbeat-2:
#    image: docker.elastic.co/beats/metricbeat:7.4.2
#    # command: --strict.perms=false
#    environment:
#      - setup.kibana.host=kibana-2:15601
#      - output.elasticsearch.hosts=["elasticsearch-2:19200"]
#    cap_add:
#      - AUDIT_CONTROL
#      - AUDIT_READ
#    volumes:
#      # - ${PWD}/configs/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#      - /proc:/hostfs/proc:ro
#      - /:/hostfs:ro
#    networks:
#      - elastic-2
#
#  heartbeat-2:
#    image: docker.elastic.co/beats/heartbeat:7.4.2
#    command: --strict.perms=false
#    environment:
#      - setup.kibana.host=kibana-2:15601
#      - output.elasticsearch.hosts=["elasticsearch-2:19200"]
#    # volumes:
#    #   - ${PWD}/configs/heartbeat.docker.yml:/usr/share/heartbeat/heartbeat.yml
#    networks:
#      - elastic-2
#
#  packetbeat-2:
#    image: docker.elastic.co/beats/packetbeat:7.4.2
#    command: --strict.perms=false
#    environment:
#      - setup.kibana.host=kibana-2:15601
#      - output.elasticsearch.hosts=["elasticsearch-2:19200"]
#    cap_add:
#      - NET_RAW
#      - NET_ADMIN
#    # volumes:
#    #   - ${PWD}/configs/packetbeat.docker.yml:/usr/share/packetbeat/packetbeat.yml
#    networks:
#      - elastic-2
#
#  filebeat-2:
#    image: docker.elastic.co/beats/filebeat:7.4.2
#    command: --strict.perms=false
#    environment:
#      - setup.kibana.host=kibana-2:15601
#      - output.elasticsearch.hosts=["elasticsearch-2:19200"]
#    ports:
#      - 19000:9000
#    volumes:
#      # - ${PWD}/configs/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - elastic-2
#  apmserver-2:
#    image: docker.elastic.co/apm/apm-server:7.4.2
#    command: --strict.perms=false
#    ports:
#      - 18200:8200
#      - 18201:8200
#    environment:
#      - apm-server.host=0.0.0.0
#      - setup.kibana.host=kibana-2:15601
#      - output.elasticsearch.hosts=["elasticsearch-2:19200"]
#    # volumes:
#    #   - ${PWD}/configs/apm-server.yml:/usr/share/apm-server/apm-server.yml
#    networks:
#        - elastic-2
#  app-search-2:
#    image: docker.elastic.co/app-search/app-search:7.4.2
#    ports:
#      - 13002:3002
#    environment:
#      secret_session_key: supersecretsessionkey
#      elasticsearch.host: http://elasticsearch1-2:19200/
#      allow_es_settings_modification: "true"
#    networks:
#        - elastic-2
#  nginx-2:
#    image: nginx:latest
#    ports:
#        - 8181:80
#    volumes:
#        - ${PWD}/nginx-2-config/:/etc/nginx/conf.d/
#    command: /bin/bash -c "nginx -g 'daemon off;'"
#    ulimits:
#      nproc: 65535
#    networks:
#      - ingress-2
volumes:
  esdata1-2:
  esdata2-2:
#  esdata3-2:
  logs-2:

networks:
  elastic:
    driver: bridge
  ingress:
    driver: bridge

# configs:
#   auditbeat_config:
#     file: configs/auditbeat.docker.yml
#   filebeat_config:
#     file: configs/filebeat.docker.yml
#   heartbeat_config:
#     file: configs/heartbeat.docker.yml
#   metricbeat_config:
#     file: configs/metricbeat.docker.yml
#   packetbeat_config:
#     file: configs/packetbeat.docker.yml